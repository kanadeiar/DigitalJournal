@page "/factory1/warehouse1"
@inherits OwningComponentBase<DigitalJournalContext>

<PageTitle>Склад сырья 1 - Завод 1</PageTitle>

<div class="row">
    <div class="col-md-4 col-lg-3 mb-1">
        <_Factory1LeftSidebarPartial />
    </div>
    <div class="col-md-8 col-lg-9 mb-1">
        <div class="border-1 bg-light shadow rounded-1 p-2">
            <h1 class="my-2 p-2"><span class="fa fa-store" aria-hidden="true"></span> Журнал по складу сырья №1</h1>

            <div class="table-responsive-lg">
                <table class="table table-sm table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.TimeAsc); })>
                                    Дата время начала смены
                                    @if (DataOrder == EDataOrder.TimeAsc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.TimeDesc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.Tank1Asc); })>
                                    Объем песка
                                    @if (DataOrder == EDataOrder.Tank1Asc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.Tank1Desc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.Tank2Asc); })>
                                    Объем цемента
                                    @if (DataOrder == EDataOrder.Tank2Asc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.Tank2Desc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.Tank3Asc); })>
                                    Объем извести
                                    @if (DataOrder == EDataOrder.Tank3Asc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.Tank3Desc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.ShiftAsc); })>
                                    Смена
                                    @if (DataOrder == EDataOrder.ShiftAsc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.ShiftDesc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th>
                                <button class="btn btn-success btn-sm" @onclick=@( async () => { await SerOrder(EDataOrder.UserAsc); })>
                                    Кладовщик
                                    @if (DataOrder == EDataOrder.UserAsc)
                                    {
                                        <i class="fa fa-angle-up"></i>
                                    }
                                    else if (DataOrder == EDataOrder.UserDesc)
                                    {
                                        <i class="fa fa-angle-down"></i>
                                    }
                                </button>
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Datas is null)
                        {
                            <tr><th colspan="9" class="p-4 text-center">Загрузка ...</th></tr>
                        }
                        else if (!Datas.Any())
                        {
                            <tr><th colspan="9" class="p-4 text-center">Данные отсутствуют</th></tr>
                        }
                        else
                        {
                            foreach (var e in Datas)
                            {
                                <tr>
                                    <td>@e.Time.ToString("dd.MM.yyyy") @e.Time.ToString("HH:mm")</td>
                                    <td>@e.Tank1LooseRawValue.ToString("F2") м3</td>
                                    <td>@e.Tank2LooseRawValue.ToString("F2") м3</td>
                                    <td>@e.Tank3LooseRawValue.ToString("F2") м3</td>
                                    <td>@e.Factory1Shift?.Name</td>
                                    <td>@e.Profile?.SurName @e.Profile?.FirstName[0]. @e.Profile?.Patronymic[0].</td>
                                    <td class="text-center">
                                        <Tooltip Text="Редактировать эту запись журнала">
                                            <NavLink class="btn btn-sm btn-info mb-1" href="@($"factory1/warehouse1/edit/{e.Id}")">
                                                <i class="fas fa-edit"></i> Редактировать
                                            </NavLink>
                                        </Tooltip>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div>
                <ul class="pagination">
                    @if (Page > 1)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(Page - 1); })>
                                <i class="fas fa-arrow-left"></i> Назад
                            </button>
                        </li>
                    }
                    @if (Page > 1)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(1); })>
                                1
                            </button>
                        </li>
                    }
                    @if (Page > 3)
                    {
                        <li class="page-item p-1 bg-secondary bg-opacity-50">
                        </li>
                    }
                    @if (Page > 2)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(Page - 1); })>
                                @(Page - 1)
                            </button>
                        </li>
                    }
                    <li class="page-item active">
                        <a class="page-link text-white">
                            @Page
                        </a>
                    </li>
                    @if (Page < PagesCount - 1)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(Page + 1); })>
                                @(Page + 1)
                            </button>
                        </li>
                    }
                    @if (Page < PagesCount - 2)
                    {
                        <li class="page-item p-1 bg-secondary bg-opacity-50">
                        </li>
                    }
                    @if (Page < PagesCount)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(PagesCount); })>
                                @PagesCount
                            </button>
                        </li>
                    }
                    @if (Page < PagesCount)
                    {
                        <li class="page-item">
                            <button class="page-link text-dark" @onclick=@(async () => { await SetPage(Page + 1); })>
                                Вперед <i class="fas fa-arrow-right"></i>
                            </button>
                        </li>
                    }
                </ul>
            </div>

            <div class="my-1">
                <NavLink class="btn btn-success mb-1" href="factory1/warehouse1/create">
                    <i class="fas fa-plus"></i>
                    Добавить данные за смену
                </NavLink>
                <button class="btn btn-info mb-1" @onclick="UpdateDataAsync">Обновить</button>
            </div>

        </div>
    </div>
</div>

@code {
    DigitalJournalContext _Context => Service;

    private IQueryable<Factory1Warehouse1ShiftData> _Query => _Context.Factory1Warehouse1ShiftData
        .Include(q => q.Profile)
        .Include(q => q.Factory1Shift);
    public IEnumerable<Factory1Warehouse1ShiftData>? Datas { get; set; }

    public EDataOrder DataOrder { get; set; } = EDataOrder.TimeDesc;
    public int Page { get; set; } = 1;
    public int PagesCount { get; set; }

    public async Task SerOrder(EDataOrder order)
    {
        DataOrder = order switch
        {
            EDataOrder.TimeAsc when DataOrder == EDataOrder.TimeAsc => EDataOrder.TimeDesc,
            EDataOrder.ShiftAsc when DataOrder == EDataOrder.ShiftAsc => EDataOrder.ShiftDesc,
            EDataOrder.UserAsc when DataOrder == EDataOrder.UserAsc => EDataOrder.UserDesc,
            EDataOrder.Tank1Asc when DataOrder == EDataOrder.Tank1Asc => EDataOrder.Tank1Desc,
            EDataOrder.Tank2Asc when DataOrder == EDataOrder.Tank2Asc => EDataOrder.Tank2Desc,
            EDataOrder.Tank3Asc when DataOrder == EDataOrder.Tank3Asc => EDataOrder.Tank3Desc,
            _ => order,
        };
        await SetPage(1);
    }
    public async Task SetPage(int page)
    {
        Page = page;
        await UpdateDataAsync();
    }


    protected override async Task OnParametersSetAsync()
    {
        await UpdateDataAsync();
        PagesCount = _Query.Count() / 10;
    }
    private async Task UpdateDataAsync()
    {
        var query = DataOrder switch
        {
            EDataOrder.TimeAsc => _Query.OrderBy(x => x.Time),
            EDataOrder.TimeDesc => _Query.OrderByDescending(x => x.Time),
            EDataOrder.ShiftAsc => _Query.Include(x => x.Factory1Shift).OrderBy(x => x.Factory1Shift.Name),
            EDataOrder.ShiftDesc => _Query.Include(x => x.Factory1Shift).OrderByDescending(x => x.Factory1Shift.Name),
            EDataOrder.UserAsc => _Query.Include(x => x.Profile).OrderBy(x => x.Profile.SurName),
            EDataOrder.UserDesc => _Query.Include(x => x.Profile).OrderByDescending(x => x.Profile.SurName),
            EDataOrder.Tank1Asc => _Query.OrderBy(x => x.Tank1LooseRawValue),
            EDataOrder.Tank1Desc => _Query.OrderByDescending(x => x.Tank1LooseRawValue),
            EDataOrder.Tank2Asc => _Query.OrderBy(x => x.Tank2LooseRawValue),
            EDataOrder.Tank2Desc => _Query.OrderByDescending(x => x.Tank2LooseRawValue),
            EDataOrder.Tank3Asc => _Query.OrderBy(x => x.Tank3LooseRawValue),
            EDataOrder.Tank3Desc => _Query.OrderByDescending(x => x.Tank3LooseRawValue),
            _ => _Query.OrderBy(x => x.Time),
        };
        Datas = await query
            .Skip((Page - 1) * 10)
            .Take(10)
            .ToArrayAsync();
    }

    public enum EDataOrder
    {
        TimeAsc,
        TimeDesc,
        ShiftAsc,
        ShiftDesc,
        UserAsc,
        UserDesc,
        Tank1Asc,
        Tank1Desc,
        Tank2Asc,
        Tank2Desc,
        Tank3Asc,
        Tank3Desc,
    }
}
