@model List<DigitalJournal.Controllers.HomeController.StackedViewModel>
@{
    ViewBag.Title = "Данные по качеству продукции";
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.FirstOrDefault().LstData.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.LstData.Select(w => w.Quantity)).ToList());
    var label2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.StackedDimensionOne).ToList());
}

<partial name="Partial/_HomeSliderPartial" />

<div class="row">
    <div class="col-md-4 col-lg-3 mb-1">
        <partial name="Partial/_LeftSidebarPartial" />
    </div>
    <div class="col-md-8 col-lg-9 mb-1">
        <div class="border-1 bg-light shadow rounded-1 p-2">
            <h1>@ViewBag.Title</h1>

            <p>Главная страница приложения Цифровой журнал.</p>

            <div class="box-body">

                <div class="chart-container">
                    <canvas id="chart" style="width:100%; height:500px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
<script type="text/javascript" src="~/lib/Chart.js/chart.min.js"></script>
<script type="text/javascript">

        $(function() {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var XLabels = @Html.Raw(XLabels);
        var YValues = @Html.Raw(YValues);
        var label = @Html.Raw(label2);
        var aux = 0;
        var barChartData = {
            labels: @Html.Raw(label2),
            datasets: []
        }
        XLabels.forEach(function(a, i) {
            var data = [];
            YValues.forEach(function(a, i) {
                data.push(a[aux]);
            });
            barChartData.datasets.push({
                label: XLabels[aux],
                backgroundColor: random_rgba(),
                data: data
            });
            aux++;
        });
        var options = {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    stacked: true,
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,164,0.2)"
                    }
                }],
                xAxes: [{
                    stacked: true,
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,164,0.2)"
                    }
                }]
            }
        };

        function random_rgba() {
            var o = Math.round,
                r = Math.random,
                s = 255;
            return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
        }
        var myChart = new Chart(ctx, {
            options: options,
            data: barChartData,
            type: 'bar'
        });
    });
</script>
}